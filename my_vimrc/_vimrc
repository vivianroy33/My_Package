source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

"System configuration------
"To fix Redraw issue when use in ConEmu
set ttyscroll=0
filetype plugin indent on
syntax on
"apperance
set number
set cc=80
set nowrap
"tab character
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set autoindent
set smarttab
"turn off error sound
set noerrorbells visualbell
"Undofile dir
set undodir=D:\Backup\vim\_undo
"set noundofile
"Swap file dir
"set dir=D:\Backup\vim\_swap
set noswapfile
"Backup dir
"set backup
"set backupdir=D:\Backup\vim\_backup
set nobackup
"use the clipboards of vim and win
set clipboard+=unnamed
"--------------------------

"Key map---------
nnoremap <CR> o<Esc>
nnoremap <S-CR> O<Esc>
"escape insert mode without <Esc>
inoremap jj <Esc>
"----------------

"pathogen---------------
execute pathogen#infect()
"-----------------------

"NERDTREE-------------------------
"Set NERDTree quick hot key toggle
let mapleader = ","
nmap <leader>n :NERDTreeToggle<cr>
nmap <leader>fn :NERDTreeFocus<cr>
"autocmd VimEnter * NERDTree
"----------------------------------

"tabman---------------------
let mapleader = ","
let g:tabman_toggle = '<leader>t'
let g:tabman_focus = '<leader>ft'
"---------------------------

"Airline--------------------
"let g:airline#extensions#tabline#enabled = 1
"---------------------------
